[{"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/index.js":"1","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/reportWebVitals.js":"2","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/App.js":"3","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleList.js":"4","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleView.js":"5","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateNav.js":"6","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleLink.js":"7","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateTab.js":"8","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/signup.js":"9","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/Login.js":"10","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/errs/404.js":"11","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Header.js":"12","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/main.js":"13","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Main.js":"14","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Test/Test.js":"15","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/User/UserPosts.js":"16","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/EditView.js":"17"},{"size":1351,"mtime":1677427618174,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1677079851993,"results":"20","hashOfConfig":"19"},{"size":2851,"mtime":1677686953789,"results":"21","hashOfConfig":"19"},{"size":1925,"mtime":1677429417833,"results":"22","hashOfConfig":"19"},{"size":420,"mtime":1677430807882,"results":"23","hashOfConfig":"19"},{"size":905,"mtime":1677689828726,"results":"24","hashOfConfig":"19"},{"size":426,"mtime":1677689576918,"results":"25","hashOfConfig":"19"},{"size":373,"mtime":1677689807481,"results":"26","hashOfConfig":"19"},{"size":3056,"mtime":1677689735089,"results":"27","hashOfConfig":"19"},{"size":2918,"mtime":1677689778248,"results":"28","hashOfConfig":"19"},{"size":258,"mtime":1677257268298,"results":"29","hashOfConfig":"19"},{"size":1715,"mtime":1677690380431,"results":"30","hashOfConfig":"19"},{"size":345,"mtime":1677265031637,"results":"31","hashOfConfig":"19"},{"size":610,"mtime":1677346599196,"results":"32","hashOfConfig":"19"},{"size":2692,"mtime":1677355141042,"results":"33","hashOfConfig":"19"},{"size":4062,"mtime":1677687033245,"results":"34","hashOfConfig":"19"},{"size":5211,"mtime":1677712168314,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2u69ra",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/index.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/reportWebVitals.js",[],[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/App.js",["95","96"],[],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport CateNav from \"../Articles/CateNav\";\nimport ArticleList from \"../Articles/ArticleList\";\nimport ArticleView from \"../Articles/ArticleView\";\nimport Cookies from \"js-cookie\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n};\n\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction App() {\n\t// const [isAuth] = useContext();\n\tconst [currArticle, setCurrArticle] = useState(INITIAL_ARTICLE);\n\tconst [newArticle, setNewArticle] = useState(null);\n\t// When new article is selected, fetch that article\n\tuseEffect(() => {\n\t\tconst getArticle = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(`api_v1/posts/${newArticle}`, options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`Could not retrieve draft: ${newArticle}`);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetCurrArticle(data);\n\t\t};\n\t\tgetArticle();\n\t}, [newArticle]);\n\n\t// Initial load of any posts\n\tconst [articles, setArticles] = useState(INITIAL_ARTICLES);\n\tconst [currCategory, setCurrCategory] = useState(\"\");\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\t// let category = \"\";\n\t\t\t// if (props.currCategory) category = props.currCategory;\n\t\t\tconst response = await fetch(`api_v1/posts/${currCategory}`, options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`unable to get articles based on category: ${currCategory}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(\"new category data\", data);\n\t\t\tif (data.length > 0) {\n\t\t\t\tsetArticles(data);\n\t\t\t}\n\t\t};\n\t\tgetArticles();\n\t}, [currCategory]);\n\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRF-Token\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(\"api_v1/posts/\", options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`unable to get articles based on category: ${currCategory}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(\"initial articles data:\", data);\n\t\t\tsetArticles(data);\n\t\t};\n\t\tgetArticles();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"app-body\">\n\t\t\t<nav className=\"App-header\">\n\t\t\t\t<CateNav setCurrCategory={setCurrCategory} />\n\t\t\t</nav>\n\t\t\t<main>\n\t\t\t\t<ArticleList\n\t\t\t\t\tarticles={articles}\n\t\t\t\t\tsetCurrCategory={setCurrCategory}\n\t\t\t\t\tsetNewArticle={setNewArticle}\n\t\t\t\t/>\n\t\t\t\t<ArticleView currArticle={currArticle} />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleList.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleView.js",[],[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateNav.js",["97"],[],"import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n// import styled from 'styled-components'\nimport CateTab from \"./CateTab\";\nimport \"./cate-nav.css\";\n\n// # CATEGORIES\n//     BUSINESS = 'bus'\n//     GAMING = 'game'\n//     HEALTH = 'hlth'\n//     POLITICS = 'pol'\n//     WORLD = 'wrld'\n// 'Gaming': 'game',\n// 'Health': 'hlth',\n// 'Politics': 'pol',\n// 'World': 'wrld',\n\nconst INITIAL_CATES = [\n\t{\n\t\tname: \"Business\",\n\t\ttag: \"bus\",\n\t},\n\t{\n\t\tname: \"Gaming\",\n\t\ttag: \"game\",\n\t},\n\t{\n\t\tname: \"Health\",\n\t\ttag: \"hlth\",\n\t},\n\t{\n\t\tname: \"Politics\",\n\t\ttag: \"pol\",\n\t},\n\t{\n\t\tname: \"World\",\n\t\ttag: \"wrld\",\n\t},\n];\n\nfunction CateNav(props) {\n\tconst [cates, setCates] = useState(INITIAL_CATES);\n\n\tconst catesHTML = cates.map((cate) => (\n\t\t<CateTab\n\t\t\tcate={cate}\n\t\t\tkey={nanoid()}\n\t\t\tsetCurrCategory={props.setCurrCategory}\n\t\t/>\n\t));\n\n\treturn <nav id=\"cate-nav\">{catesHTML}</nav>;\n}\n\nexport default CateNav;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleLink.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateTab.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/signup.js",["98"],[],"import \"./AuthForm.css\";\nimport { useState } from \"react\";\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction SignupForm(props) {\n\tconst [isAuth, setAuth, setCurrUser] = useOutletContext();\n\tconst [error, setError] = useState(null);\n\tconst navigate = useNavigate();\n\n\tconst [user, setUser] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword1: \"\",\n\t\tpassword2: \"\",\n\t});\n\n\tconst handleError = (err) => {\n\t\tconsole.warn(err);\n\t};\n\n\tconst handleInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetUser((prev) => ({\n\t\t\t...prev,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\t// testing functionality\n\t\tconsole.log(\"User info:\", user);\n\t\tif (user.password1 !== user.password2) {\n\t\t\tsetError(\"Passwords do not match\");\n\t\t}\n\n\t\t// uncomment for build\n\t\tconst options = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(user),\n\t\t};\n\t\tconst response = await fetch(\"dj-rest-auth/registration/\", options).catch(\n\t\t\thandleError\n\t\t);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(\"Could not create user account\");\n\t\t}\n\t\tconst data = await response.json();\n\t\tconsole.log(\"signup response: \", response);\n\t\tCookies.set(\"Authorization\", `Token ${data.key}`);\n\t\tsetAuth(true);\n\t\tsetCurrUser(user.username.toUpperCase());\n\t\tnavigate(\"/home\");\n\t};\n\n\treturn (\n\t\t<div id=\"form-container\">\n\t\t\t<form id=\"auth-form\" onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tvalue={user.username}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"xX_C00L-n4m3_Xx\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"email1\">Email address</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={user.email}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t/>\n\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">\n\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"password1\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"password1\"\n\t\t\t\t\t\tname=\"password1\"\n\t\t\t\t\t\tvalue={user.password1}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"Secure Password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"password2\">Confirm Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"password2\"\n\t\t\t\t\t\tname=\"password2\"\n\t\t\t\t\t\tvalue={user.password2}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"form-error\">{error}</div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default SignupForm;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/Login.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/errs/404.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Header.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/main.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Main.js",[],[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Test/Test.js",["99","100","101"],[],"import \"./test.css\"\nimport { useState, useEffect } from \"react\";\nimport ArticleLink from \"../Articles/ArticleLink\";\nimport Cookies from \"js-cookie\";\nimport { nanoid } from \"nanoid\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n};\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction Test(props) {\n    const [currArticle, setCurrArticle] = useState(INITIAL_ARTICLE);\n    const [articles, setArticles] = useState(INITIAL_ARTICLES);\n\n    const getAll = async (e) => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"api_v1/posts/\", options);\n        if (!response.ok) {\n            throw new Error(\"Couldn't fetch articles\")\n        }\n        const data = await response.json();\n        console.log(\"Get all data: \", data)\n        setArticles(data);\n    }\n\n    const getAdmin = async (e) => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"api_v1/posts/submitted/\", options);\n        if (!response.ok) {\n            throw new Error(\"Couldn't fetch articles\")\n        }\n        const data = await response.json();\n        console.log(\"Get admin data: \", data)\n        setArticles(data);\n    }\n\n    const getDraft = async (e) => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"api_v1/posts/drafts\", options);\n        if (!response.ok) {\n            throw new Error(\"Couldn't fetch articles\")\n        }\n        const data = await response.json();\n        console.log(\"Get draft data: \", data)\n        setArticles(data);\n    }\n\n    const articlesHTML = articles.map((article) => (\n\t\t<ArticleLink\n\t\t\tkey={nanoid()}\n\t\t\tarticle={article}\n\t\t\tsetNewArticle={props.setNewArticle}\n\t\t/>\n\t));\n\n\n    return (\n        <div id=\"test-body\">\n            <h1 id=\"test-title\">I am the test</h1>\n            <nav>\n                <button onClick={getAll} >All</button>\n                <button onClick={getAdmin} >Admin</button>\n                <button onClick={getDraft} >Draft</button>\n            </nav>\n            <main>\n                <ul className=\"link-list\">{articlesHTML}</ul>;\n\t\t\t</main>\n        </div>\n    )\n}\n\nexport default Test","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/User/UserPosts.js",["102"],[],"import { useState, useEffect } from \"react\";\nimport ArticleList from \"../Articles/ArticleList\";\nimport ArticleView from \"../Articles/ArticleView\";\nimport EditView from \"../Articles/EditView\";\nimport Cookies from \"js-cookie\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n};\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction UserPosts(props) {\n\n    const [currArticle, setCurrArticle] = useState(INITIAL_ARTICLE);\n\tconst [newArticle, setNewArticle] = useState(\"\");\n\n\t// Getting specific article when newArticle is changed - sets to currArticle for <ArticleView />\n\tuseEffect(() => {\n\t\tconst getArticle = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(`api_v1/posts/drafts/${newArticle}`, options);\n            if (!response.ok) {\n                throw new Error(`Could not retrieve draft: ${newArticle}`)\n            }\n\t\t\tconst data = await response.json();\n\t\t\tsetCurrArticle(data);\n\t\t};\n\t\tgetArticle();\n\t}, [newArticle]);\n\n\t// Initial load of drafts\n\tconst [articles, setArticles] = useState(INITIAL_ARTICLES);\n    // Getting articles for list - from /drafts/\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRF-Token\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(\"api_v1/posts/drafts/\", options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`unable to get drafts`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetArticles(data);\n\t\t};\n\t\tgetArticles();\n\t}, []);\n\n    \n\n\treturn (\n        <section>\n            <h1>Your Posts:</h1>\n            <main>\n\t\t\t\t<ArticleList\n\t\t\t\t\tarticles={articles}\n\t\t\t\t\tsetNewArticle={setNewArticle}\n\t\t\t\t/>\n\t\t\t\t<EditView currArticle={currArticle} />\n                {/* MAKE DraftView - CARBON COPY OF ARTICLEVIEW BUT WITH EDITABLE FIELDS */}\n\t\t\t</main>\n        </section>\n    );\n}\n\nexport default UserPosts\n\n// OLD CODE NOTES ?\n\n\n    // const [articles, setArticles] = useState(null)\n    // const [newArticle, setNewArticle] = useState(null);\n    // const [currArticle, setCurrArticle] = useState({title: \"Select an article to edit\", text: \"The magic of editing happens here\"})\n\t\n\n    // // When new article is selected, fetch that article - set to currArticle\n\t// useEffect(() => {\n\t// \tconst getArticles = async (e) => {\n\t// \t\tconst options = {\n\t// \t\t\tmethod: \"GET\",\n\t// \t\t\theaders: {\n\t// \t\t\t\t\"Content-Type\": \"application/json\",\n\t// \t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t// \t\t\t},\n\t// \t\t};\n\t// \t\tconst response = await fetch(`api_v1/posts/${newArticle}`, options);\n\t// \t\tconst data = await response.json();\n\t// \t\tsetCurrArticle(data);\n\t// \t};\n\t// \tgetArticles();\n\t// }, [newArticle]);\n\n    // useEffect(() => {\n            //     const getArticles = async (e) => {\n            //         const options = {\n            //             method: \"GET\",\n            //             headers: {\n            //                 \"Content-Type\": \"application/json\",\n            //                 \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            //             },\n            //         };\n            //         // let category = \"\";\n            //         // if (props.currCategory) category = props.currCategory;\n            //         const response = await fetch(`api_v1/posts/`, options);\n            //         if (!response.ok) {\n            //             throw new Error(\n            //                 `unable to get articles based on category: ${currCategory}`\n            //             );\n            //         }\n            //         const data = await response.json();\n            //         console.log(\"new category data\", data);\n            //         if (data.length > 0) {\n            //             setArticles(data);\n            //         }\n            //     };\n            //     getArticles();\n            // }, [currCategory]);\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/EditView.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":89,"column":5,"nodeType":"109","endLine":89,"endColumn":7,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":42,"column":16,"nodeType":"105","messageId":"106","endLine":42,"endColumn":24},{"ruleId":"103","severity":1,"message":"112","line":7,"column":9,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"103","severity":1,"message":"113","line":2,"column":20,"nodeType":"105","messageId":"106","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"114","line":14,"column":12,"nodeType":"105","messageId":"106","endLine":14,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":14,"column":25,"nodeType":"105","messageId":"106","endLine":14,"endColumn":39},{"ruleId":"103","severity":1,"message":"116","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":19},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currCategory'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'setCates' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'useEffect' is defined but never used.","'currArticle' is assigned a value but never used.","'setCurrArticle' is assigned a value but never used.","'ArticleView' is defined but never used.",{"desc":"118","fix":"119"},"Update the dependencies array to be: [currCategory]",{"range":"120","text":"121"},[2488,2490],"[currCategory]"]