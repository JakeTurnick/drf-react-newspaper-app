[{"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/index.js":"1","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/reportWebVitals.js":"2","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/App.js":"3","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleList.js":"4","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleView.js":"5","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateNav.js":"6","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleLink.js":"7","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateTab.js":"8","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/signup.js":"9","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/Login.js":"10","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/errs/404.js":"11","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Header.js":"12","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/main.js":"13","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Main.js":"14","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Test/Test.js":"15","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/UserPosts.js":"16","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/AdminPosts.js":"17","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/NewPost.js":"18","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/EditView.js":"19","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/PublishView.js":"20"},{"size":1559,"mtime":1677788973106,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1677079851993,"results":"23","hashOfConfig":"22"},{"size":2924,"mtime":1677784228548,"results":"24","hashOfConfig":"22"},{"size":1925,"mtime":1677778927666,"results":"25","hashOfConfig":"22"},{"size":535,"mtime":1677813912435,"results":"26","hashOfConfig":"22"},{"size":938,"mtime":1677784031975,"results":"27","hashOfConfig":"22"},{"size":497,"mtime":1677782069621,"results":"28","hashOfConfig":"22"},{"size":373,"mtime":1677689807481,"results":"29","hashOfConfig":"22"},{"size":3059,"mtime":1677783440150,"results":"30","hashOfConfig":"22"},{"size":2919,"mtime":1677813660848,"results":"31","hashOfConfig":"22"},{"size":258,"mtime":1677257268298,"results":"32","hashOfConfig":"22"},{"size":1942,"mtime":1677814182105,"results":"33","hashOfConfig":"22"},{"size":345,"mtime":1677265031637,"results":"34","hashOfConfig":"22"},{"size":744,"mtime":1677814145041,"results":"35","hashOfConfig":"22"},{"size":2692,"mtime":1677355141042,"results":"36","hashOfConfig":"22"},{"size":2282,"mtime":1677789349495,"results":"37","hashOfConfig":"22"},{"size":2260,"mtime":1677813338460,"results":"38","hashOfConfig":"22"},{"size":4075,"mtime":1677814053765,"results":"39","hashOfConfig":"22"},{"size":4229,"mtime":1677813605954,"results":"40","hashOfConfig":"22"},{"size":2665,"mtime":1677813625368,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2u69ra",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/index.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/reportWebVitals.js",[],[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/App.js",["113","114","115"],[],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport CateNav from \"../Articles/CateNav\";\nimport ArticleList from \"../Articles/ArticleList\";\nimport ArticleView from \"../Articles/ArticleView\";\nimport Cookies from \"js-cookie\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n\tusername: \"someone\",\n};\n\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction App() {\n\t// const [isAuth] = useContext();\n\tconst [currArticle, setCurrArticle] = useState(INITIAL_ARTICLE);\n\tconst [newArticle, setNewArticle] = useState(null);\n\t// When new article is selected, fetch that article\n\tuseEffect(() => {\n\t\tconst getArticle = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(`api_v1/posts/${newArticle}`, options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`Could not retrieve draft: ${newArticle}`);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetCurrArticle(data);\n\t\t};\n\t\tgetArticle();\n\t}, [newArticle]);\n\n\t// Initial load of any posts\n\tconst [articles, setArticles] = useState(INITIAL_ARTICLES);\n\tconst [currCategory, setCurrCategory] = useState(\"\");\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tlet response;\n\t\t\tif (currCategory == \"\") {\n\t\t\t\tresponse = await fetch(`api_v1/posts`, options);\n\t\t\t} else {\n\t\t\t\tresponse = await fetch(\n\t\t\t\t\t`api_v1/posts/category/${currCategory}`,\n\t\t\t\t\toptions\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`unable to get articles based on category: ${currCategory}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(\"new category data\", data);\n\t\t\tif (data.length > 0) {\n\t\t\t\tsetArticles(data);\n\t\t\t}\n\t\t};\n\t\tgetArticles();\n\t}, [currCategory]);\n\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRF-Token\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(\"api_v1/posts/\", options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`unable to get articles based on category: ${currCategory}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(\"initial articles data:\", data);\n\t\t\tsetArticles(data);\n\t\t};\n\t\tgetArticles();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"app-body\">\n\t\t\t<nav className=\"App-header\">\n\t\t\t\t<CateNav setCurrCategory={setCurrCategory} />\n\t\t\t</nav>\n\t\t\t<main>\n\t\t\t\t<ArticleList\n\t\t\t\t\tarticles={articles}\n\t\t\t\t\tsetCurrCategory={setCurrCategory}\n\t\t\t\t\tsetNewArticle={setNewArticle}\n\t\t\t\t/>\n\t\t\t\t<ArticleView currArticle={currArticle} />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleList.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleView.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateNav.js",["116"],[],"import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n// import styled from 'styled-components'\nimport CateTab from \"./CateTab\";\nimport \"./cate-nav.css\";\n\n// # CATEGORIES\n//     BUSINESS = 'bus'\n//     GAMING = 'game'\n//     HEALTH = 'hlth'\n//     POLITICS = 'pol'\n//     WORLD = 'wrld'\n// 'Gaming': 'game',\n// 'Health': 'hlth',\n// 'Politics': 'pol',\n// 'World': 'wrld',\n\nconst INITIAL_CATES = [\n\t{\n\t\tname: \"All\",\n\t\ttag: \"\",\n\t},\n\t{\n\t\tname: \"Business\",\n\t\ttag: \"bus\",\n\t},\n\t{\n\t\tname: \"Gaming\",\n\t\ttag: \"game\",\n\t},\n\t{\n\t\tname: \"Health\",\n\t\ttag: \"hlth\",\n\t},\n\t{\n\t\tname: \"Politics\",\n\t\ttag: \"pol\",\n\t},\n\t{\n\t\tname: \"World\",\n\t\ttag: \"wrld\",\n\t},\n];\n\nfunction CateNav(props) {\n\tconst [cates, setCates] = useState(INITIAL_CATES);\n\n\tconst catesHTML = cates.map((cate) => (\n\t\t<CateTab\n\t\t\tcate={cate}\n\t\t\tkey={nanoid()}\n\t\t\tsetCurrCategory={props.setCurrCategory}\n\t\t/>\n\t));\n\n\treturn <nav id=\"cate-nav\">{catesHTML}</nav>;\n}\n\nexport default CateNav;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleLink.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/CateTab.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/signup.js",["117"],[],"import \"./AuthForm.css\";\nimport { useState } from \"react\";\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction SignupForm(props) {\n\tconst [isAuth, setAuth, setCurrUser] = useOutletContext();\n\tconst [error, setError] = useState(null);\n\tconst navigate = useNavigate();\n\n\tconst [user, setUser] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword1: \"\",\n\t\tpassword2: \"\",\n\t});\n\n\tconst handleError = (err) => {\n\t\tconsole.warn(err);\n\t};\n\n\tconst handleInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetUser((prev) => ({\n\t\t\t...prev,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\t// testing functionality\n\t\tconsole.log(\"User info:\", user);\n\t\tif (user.password1 !== user.password2) {\n\t\t\tsetError(\"Passwords do not match\");\n\t\t}\n\n\t\t// uncomment for build\n\t\tconst options = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(user),\n\t\t};\n\t\tconst response = await fetch(\"dj-rest-auth/registration/\", options).catch(\n\t\t\thandleError\n\t\t);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(\"Could not create user account\");\n\t\t}\n\t\tconst data = await response.json();\n\t\t// console.log(\"signup response: \", response);\n\t\tCookies.set(\"Authorization\", `Token ${data.key}`);\n\t\tsetAuth(true);\n\t\tsetCurrUser(user.username.toUpperCase());\n\t\tnavigate(\"/home\");\n\t};\n\n\treturn (\n\t\t<div id=\"form-container\">\n\t\t\t<form id=\"auth-form\" onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tvalue={user.username}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"xX_C00L-n4m3_Xx\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"email1\">Email address</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={user.email}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t/>\n\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">\n\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"password1\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"password1\"\n\t\t\t\t\t\tname=\"password1\"\n\t\t\t\t\t\tvalue={user.password1}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"Secure Password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"password2\">Confirm Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"password2\"\n\t\t\t\t\t\tname=\"password2\"\n\t\t\t\t\t\tvalue={user.password2}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"form-error\">{error}</div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default SignupForm;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Auth/Login.js",["118"],[],"import \"./AuthForm.css\";\nimport { useState } from \"react\";\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction LoginForm(props) {\n\tconst [isAuth, setAuth, setCurrUser, setIsSu] = useOutletContext();\n\tconst navigate = useNavigate();\n\n\tconst toggleAuth = () => {\n\t\tsetAuth(!isAuth);\n\t};\n\n\tconst [user, setUser] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t\tis_superuser: false,\n\t});\n\n\tconst handleError = (err) => {\n\t\tconsole.warn(err);\n\t};\n\n\tconst handleInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetUser((prev) => ({\n\t\t\t...prev,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\t// testing functionality\n\t\t// console.log(\"User info:\", user);\n\n\t\t// uncomment for build\n\t\tconst options = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(user),\n\t\t};\n\t\tconst response = await fetch(\"dj-rest-auth/login/\", options).catch(\n\t\t\thandleError\n\t\t);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(\"Could not login / authenticate user\");\n\t\t}\n\t\tconst data = await response.json();\n\t\t// console.log(\"login data: \", data);\n\t\tCookies.set(\"Authorization\", `Token ${data.key}`);\n\t\tsetAuth(true);\n\t\tsetIsSu(data.is_superuser);\n\t\tsetCurrUser(data.username);\n\t\tnavigate(\"/home\");\n\t};\n\n\t// const getBg = async (e) => {\n\t// \tconst options = {\n\t// \t\tmethod: \"GET\",\n\t// \t\theaders: {\n\t// \t\t\t\"Content-Type\": \"application/json\",\n\t// \t\t\t\"Accept-Version\": \"v1\",\n\t// \t\t},\n\t// \t\tbody: \"some text\",\n\t// \t};\n\t// \tconst response = await fetch(\"https://api.unsplash.com/\", options);\n\t// \tconst data = await response.json();\n\t// };\n\n\treturn (\n\t\t<div id=\"form-container\">\n\t\t\t<form id=\"auth-form\" onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tvalue={user.username}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"xX_C00L-n4m3_Xx\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Email address</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\taria-describedby=\"emailHelp\"\n\t\t\t\t\t\tplaceholder=\"me@awesome.com\"\n\t\t\t\t\t/>\n\t\t\t\t\t<small id=\"email\" className=\"form-text text-muted\">\n\t\t\t\t\t\tWe'll never share your email with anyone else.\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"password1\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default LoginForm;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/errs/404.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Header.js",["119"],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/main.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/App/Main.js",["120"],[],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nimport Header from \"./Header\";\n\nfunction Main() {\n\tconst [currUser, setCurrUser] = useState(null);\n\tconst [isAuth, setAuth] = useState(!!Cookies.get(\"Authorization\"));\n\tconst [isSu, setIsSu] = useState(false);\n\n\t// useEffect(() => {\n\t// \tconsole.log(\"new auth: \", isAuth);\n\t// }, [isAuth]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header\n\t\t\t\tisAuth={isAuth}\n\t\t\t\tsetAuth={setAuth}\n\t\t\t\tcurrUser={currUser}\n\t\t\t\tsetCurrUser={setCurrUser}\n\t\t\t\tisSu={isSu}\n\t\t\t\tsetIsSu={setIsSu}\n\t\t\t/>\n\t\t\t<Outlet context={[isAuth, setAuth, setCurrUser, setIsSu, isSu]} />\n\t\t\t{/* Outlet changes base on route */}\n\t\t</>\n\t);\n}\n\nexport default Main;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Test/Test.js",["121","122","123"],[],"import \"./test.css\"\nimport { useState, useEffect } from \"react\";\nimport ArticleLink from \"../Articles/ArticleLink\";\nimport Cookies from \"js-cookie\";\nimport { nanoid } from \"nanoid\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n};\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction Test(props) {\n    const [currArticle, setCurrArticle] = useState(INITIAL_ARTICLE);\n    const [articles, setArticles] = useState(INITIAL_ARTICLES);\n\n    const getAll = async (e) => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"api_v1/posts/\", options);\n        if (!response.ok) {\n            throw new Error(\"Couldn't fetch articles\")\n        }\n        const data = await response.json();\n        console.log(\"Get all data: \", data)\n        setArticles(data);\n    }\n\n    const getAdmin = async (e) => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"api_v1/posts/submitted/\", options);\n        if (!response.ok) {\n            throw new Error(\"Couldn't fetch articles\")\n        }\n        const data = await response.json();\n        console.log(\"Get admin data: \", data)\n        setArticles(data);\n    }\n\n    const getDraft = async (e) => {\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        };\n        const response = await fetch(\"api_v1/posts/drafts\", options);\n        if (!response.ok) {\n            throw new Error(\"Couldn't fetch articles\")\n        }\n        const data = await response.json();\n        console.log(\"Get draft data: \", data)\n        setArticles(data);\n    }\n\n    const articlesHTML = articles.map((article) => (\n\t\t<ArticleLink\n\t\t\tkey={nanoid()}\n\t\t\tarticle={article}\n\t\t\tsetNewArticle={props.setNewArticle}\n\t\t/>\n\t));\n\n\n    return (\n        <div id=\"test-body\">\n            <h1 id=\"test-title\">I am the test</h1>\n            <nav>\n                <button onClick={getAll} >All</button>\n                <button onClick={getAdmin} >Admin</button>\n                <button onClick={getDraft} >Draft</button>\n            </nav>\n            <main>\n                <ul className=\"link-list\">{articlesHTML}</ul>;\n\t\t\t</main>\n        </div>\n    )\n}\n\nexport default Test","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/UserPosts.js",["124","125"],[],"import { useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport ArticleList from \"../Articles/ArticleList\";\nimport ArticleView from \"../Articles/ArticleView\";\nimport EditView from \"./EditView\";\nimport Cookies from \"js-cookie\";\nimport \"./User-Posts.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n\tusername: \"someone\",\n};\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction UserPosts(props) {\n\tconst [currArticle, setCurrArticle] = useState(INITIAL_ARTICLE);\n\tconst [newArticle, setNewArticle] = useState(\"\");\n\tconst navigate = useNavigate();\n\n\t// Getting specific article when newArticle is changed - sets to currArticle for <ArticleView />\n\tuseEffect(() => {\n\t\tconst getArticle = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(\n\t\t\t\t`api_v1/posts/drafts/${newArticle}`,\n\t\t\t\toptions\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`Could not retrieve draft: ${newArticle}`);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetCurrArticle(data);\n\t\t};\n\t\tgetArticle();\n\t}, [newArticle]);\n\n\t// Initial load of drafts\n\tconst [articles, setArticles] = useState(INITIAL_ARTICLES);\n\t// Getting articles for list - from /drafts/\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-CSRF-Token\": Cookies.get(\"csrftoken\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(\"api_v1/posts/drafts/\", options);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`unable to get drafts`);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetArticles(data);\n\t\t};\n\t\tgetArticles();\n\t}, []);\n\n\treturn (\n\t\t<section>\n\t\t\t<div id=\"user-post-title\">\n\t\t\t\t<h1>Your Posts:</h1>\n\t\t\t\t<button onClick={() => navigate(\"/new\")}>New post</button>\n\t\t\t</div>\n\t\t\t<main>\n\t\t\t\t<ArticleList articles={articles} setNewArticle={setNewArticle} />\n\t\t\t\t<EditView currArticle={currArticle} />\n\t\t\t\t{/* MAKE DraftView - CARBON COPY OF ARTICLEVIEW BUT WITH EDITABLE FIELDS */}\n\t\t\t</main>\n\t\t</section>\n\t);\n}\n\nexport default UserPosts;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/AdminPosts.js",[],[],"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/NewPost.js",["126","127"],[],"import \"./NewPost.css\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst INITIAL_ARTICLE = {\n\ttitle: \"Article Title\",\n\ttext: \"Article text\",\n\tusername: \"someone\",\n};\n\nfunction NewPost(props) {\n\tconst [post, setPost] = useState({});\n\tconst navigate = useNavigate();\n\n\tconst handleInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetPost((prev) => ({\n\t\t\t...prev,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst submitDraft = async (e) => {\n\t\t// console.log(\"submit post: \", post)\n\t\te.preventDefault();\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: true,\n\t\t\tis_published: false,\n\t\t};\n\t\tconst options = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(putPost),\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/new/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not submit post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tconsole.log(\"Submit Draft PUT data: \", data);\n\t\tnavigate(\"/profile\");\n\t};\n\n\tconst saveDraft = async (e) => {\n\t\t// console.log(\"submit post: \", post)\n\t\te.preventDefault();\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: false,\n\t\t\tis_published: false,\n\t\t};\n\t\tconst options = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(putPost),\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/new/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not submit post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tconsole.log(\"Submit Draft POST data: \", data);\n\t\tnavigate(\"/profile\");\n\t};\n\n\treturn (\n\t\t<div id=\"new-post\">\n\t\t\t<h1>I am a new Post</h1>\n\t\t\t<form onSubmit={(e) => e.preventDefault()}>\n\t\t\t\t<div id=\"post-typing\">\n\t\t\t\t\t<label htmlFor=\"title\">Post Title:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tvalue={post.title}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"text\">Post text:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"text\"\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tvalue={post.text}\n\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Select a Post Category</legend>\n\n\t\t\t\t\t<div id=\"category-choice\">\n\t\t\t\t\t\t<label htmlFor=\"\">\n\t\t\t\t\t\t\tBusiness\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\tid=\"bussiness\"\n\t\t\t\t\t\t\t\tvalue={\"bus\"}\n\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label htmlFor=\"\">\n\t\t\t\t\t\t\tGaming\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\tid=\"gaming\"\n\t\t\t\t\t\t\t\tvalue={\"game\"}\n\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label htmlFor=\"\">\n\t\t\t\t\t\t\tHealth\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\tid=\"health\"\n\t\t\t\t\t\t\t\tvalue={\"hlth\"}\n\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label htmlFor=\"\">\n\t\t\t\t\t\t\tPolitics\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\tid=\"politics\"\n\t\t\t\t\t\t\t\tvalue={\"pol\"}\n\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label htmlFor=\"\">\n\t\t\t\t\t\t\tWorld\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\t\tid=\"world\"\n\t\t\t\t\t\t\t\tvalue={\"wrld\"}\n\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\n\t\t\t\t<div className=\"choice\">\n\t\t\t\t\t<button id=\"save\" onClick={saveDraft}>\n\t\t\t\t\t\tSave as Draft\n\t\t\t\t\t</button>\n\t\t\t\t\t<button id=\"submit\" onClick={submitDraft}>\n\t\t\t\t\t\tSubmit Post\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default NewPost;\n\n// const INITIAL_CATES = [\n// \t{\n// \t\tname: \"All\",\n// \t\ttag: \"\",\n// \t},\n// \t{\n// \t\tname: \"Business\",\n// \t\ttag: \"bus\",\n// \t},\n// \t{\n// \t\tname: \"Gaming\",\n// \t\ttag: \"game\",\n// \t},\n// \t{\n// \t\tname: \"Health\",\n// \t\ttag: \"hlth\",\n// \t},\n// \t{\n// \t\tname: \"Politics\",\n// \t\ttag: \"pol\",\n// \t},\n// \t{\n// \t\tname: \"World\",\n// \t\ttag: \"wrld\",\n// \t},\n// ];\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/EditView.js",["128","129","130"],[],"import \"../Articles/article-view.css\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction EditView(props) {\n\t// console.log(\"EditView props: \", props);\n\tconst [post, setPost] = useState(props.currArticle);\n\tconst [edit, setEdit] = useState(false);\n\tconst navigate = useNavigate();\n\t// console.log(\"EditView post: \", post);\n\n\tuseEffect(() => setPost(props.currArticle), [props.currArticle]);\n\n\tconst toggleEdit = () => {\n\t\tsetEdit(!edit);\n\t};\n\n\tconst handleInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetPost((prev) => ({\n\t\t\t...prev,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst updateDraft = async (e) => {\n\t\te.preventDefault();\n\t\t// console.log(\"update post: \", post);\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tauthor: post.author,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: post.is_submitted,\n\t\t\tis_published: post.is_published,\n\t\t};\n\t\t// console.log(\"update test: \", putPost);\n\t\tconst options = {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(putPost),\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/drafts/${post.id}/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not update post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tnavigate(\"/profile\");\n\t\t// console.log(\"Update Draft PUT data: \", data)\n\t};\n\n\tconst submitDraft = async (e) => {\n\t\t// console.log(\"submit post: \", post)\n\t\te.preventDefault();\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tauthor: post.author,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: true,\n\t\t\tis_published: post.is_published,\n\t\t};\n\t\tconst options = {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(putPost),\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/drafts/${post.id}/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not submit post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tnavigate(\"/profile\");\n\t\t// console.log(\"Submit Draft PUT data: \", data)\n\t};\n\n\tconst deleteDraft = async (e) => {\n\t\t// console.log(\"submit post: \", post)\n\t\te.preventDefault();\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tauthor: post.author,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: post.is_submitted,\n\t\t\tis_published: post.is_published,\n\t\t};\n\t\tconst options = {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: \"\",\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/drafts/${post.id}/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not delete post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tnavigate(\"/profile\");\n\t\t// console.log(\"Submit Draft PUT data: \", data)\n\t};\n\n\treturn (\n\t\t<section id=\"edit-view\">\n\t\t\t<button id=\"edit-toggle\" onClick={toggleEdit}>\n\t\t\t\t{edit ? \"Edit article?\" : \"stop editing\"}\n\t\t\t</button>\n\t\t\t{edit ? (\n\t\t\t\t<div id=\"article-view\">\n\t\t\t\t\t{post.title ? <h1>{post.title}</h1> : <h1>Select an article</h1>}\n\t\t\t\t\t{post.text ? <p>{post.text}</p> : <p>Article text here</p>}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<form id=\"edit-view\">\n\t\t\t\t\t{post.title ? (\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tid=\"edit-title\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tspellCheck=\"true\"\n\t\t\t\t\t\t\tvalue={post.title}\n\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h1>Select an article</h1>\n\t\t\t\t\t)}\n\t\t\t\t\t{post.text ? (\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\tid=\"edit-text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\twrap=\"soft\"\n\t\t\t\t\t\t\tspellCheck=\"true\"\n\t\t\t\t\t\t\tvalue={post.text}\n\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>Article text here</p>\n\t\t\t\t\t)}\n\t\t\t\t\t{post.username ? <h2>By: {post.username}</h2> : <div></div>}\n\t\t\t\t\t<div className=\"choice\">\n\t\t\t\t\t\t<button id=\"update\" onClick={updateDraft} type=\"submit\">\n\t\t\t\t\t\t\tUpdate draft\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"submit\" onClick={submitDraft}>\n\t\t\t\t\t\t\tSubmit draft\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"delete\" onClick={deleteDraft}>\n\t\t\t\t\t\t\tDelete draft\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</section>\n\t);\n}\n\nexport default EditView;\n","/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Posts/PublishView.js",["131","132","133","134"],[],"import \"../Articles/article-view.css\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction PublishView(props) {\n\t// console.log(\"PublishView props: \", props);\n\tconst [post, setPost] = useState(props.currArticle);\n\tconst [edit, setEdit] = useState(false);\n\tconst navigate = useNavigate();\n\t// console.log(\"EditView post: \", post);\n\n\tuseEffect(() => setPost(props.currArticle), [props.currArticle]);\n\n\tconst toggleEdit = () => {\n\t\tsetEdit(!edit);\n\t};\n\n\tconst handleInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetPost((prev) => ({\n\t\t\t...prev,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst publishSubmit = async (e) => {\n\t\t// console.log(\"submit post: \", post)\n\t\te.preventDefault();\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tauthor: post.author,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: post.is_submitted,\n\t\t\tis_published: true,\n\t\t};\n\t\tconst options = {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify(putPost),\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/drafts/${post.id}/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not submit post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tnavigate(\"/home\");\n\t\t// console.log(\"Submit Draft PUT data: \", data)\n\t};\n\n\tconst deleteSubmit = async (e) => {\n\t\t// console.log(\"submit post: \", post)\n\t\te.preventDefault();\n\t\tconst putPost = {\n\t\t\ttitle: post.title,\n\t\t\ttext: post.text,\n\t\t\tauthor: post.author,\n\t\t\tcategory: post.category,\n\t\t\tis_submitted: post.is_submitted,\n\t\t\tis_published: post.is_published,\n\t\t};\n\t\tconst options = {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n\t\t\t},\n\t\t\tbody: \"\",\n\t\t};\n\t\tconst response = await fetch(`api_v1/posts/drafts/${post.id}/`, options);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Could not delete post ${putPost}`);\n\t\t}\n\t\tconst data = await response.json();\n\t\tnavigate(\"/home\");\n\t\t// console.log(\"Submit Draft PUT data: \", data)\n\t};\n\n\treturn (\n\t\t<div className=\"publish-container\">\n\t\t\t{post ? (\n\t\t\t\t<section id=\"edit-view\">\n\t\t\t\t\t<div id=\"article-view\">\n\t\t\t\t\t\t<h1>{post.title}</h1>\n\t\t\t\t\t\t<p>{post.text}</p>\n\t\t\t\t\t\t<h2>By: {post.username}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"choice\">\n\t\t\t\t\t\t<button id=\"publish\" onClick={publishSubmit}>\n\t\t\t\t\t\t\tPublish submit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id=\"delete\" onClick={deleteSubmit}>\n\t\t\t\t\t\t\tDelete submit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t) : (\n\t\t\t\t<h1>No post selected</h1>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default PublishView;\n",{"ruleId":"135","severity":1,"message":"136","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":54,"column":21,"nodeType":"141","messageId":"142","endLine":54,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":97,"column":5,"nodeType":"145","endLine":97,"endColumn":7,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"147","line":46,"column":16,"nodeType":"137","messageId":"138","endLine":46,"endColumn":24},{"ruleId":"135","severity":1,"message":"148","line":7,"column":9,"nodeType":"137","messageId":"138","endLine":7,"endColumn":15},{"ruleId":"135","severity":1,"message":"149","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":18},{"ruleId":"135","severity":1,"message":"150","line":20,"column":9,"nodeType":"137","messageId":"138","endLine":20,"endColumn":13},{"ruleId":"135","severity":1,"message":"151","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":29},{"ruleId":"135","severity":1,"message":"151","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":29},{"ruleId":"135","severity":1,"message":"152","line":14,"column":12,"nodeType":"137","messageId":"138","endLine":14,"endColumn":23},{"ruleId":"135","severity":1,"message":"153","line":14,"column":25,"nodeType":"137","messageId":"138","endLine":14,"endColumn":39},{"ruleId":"135","severity":1,"message":"154","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":18},{"ruleId":"135","severity":1,"message":"155","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":19},{"ruleId":"135","severity":1,"message":"151","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":29},{"ruleId":"135","severity":1,"message":"156","line":6,"column":7,"nodeType":"137","messageId":"138","endLine":6,"endColumn":22},{"ruleId":"135","severity":1,"message":"150","line":51,"column":9,"nodeType":"137","messageId":"138","endLine":51,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":79,"column":9,"nodeType":"137","messageId":"138","endLine":79,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":107,"column":9,"nodeType":"137","messageId":"138","endLine":107,"endColumn":13},{"ruleId":"135","severity":1,"message":"157","line":15,"column":8,"nodeType":"137","messageId":"138","endLine":15,"endColumn":18},{"ruleId":"135","severity":1,"message":"158","line":19,"column":8,"nodeType":"137","messageId":"138","endLine":19,"endColumn":19},{"ruleId":"135","severity":1,"message":"150","line":50,"column":9,"nodeType":"137","messageId":"138","endLine":50,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":78,"column":9,"nodeType":"137","messageId":"138","endLine":78,"endColumn":13},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currCategory'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'setCates' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'toggleAuth' is assigned a value but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'currArticle' is assigned a value but never used.","'setCurrArticle' is assigned a value but never used.","'Navigate' is defined but never used.","'ArticleView' is defined but never used.","'INITIAL_ARTICLE' is assigned a value but never used.","'toggleEdit' is assigned a value but never used.","'handleInput' is assigned a value but never used.",{"desc":"160","fix":"161"},"Update the dependencies array to be: [currCategory]",{"range":"162","text":"163"},[2561,2563],"[currCategory]"]