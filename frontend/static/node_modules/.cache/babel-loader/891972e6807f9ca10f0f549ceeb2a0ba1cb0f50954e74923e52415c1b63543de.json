{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ArticleLink from \"./ArticleLink\";\nimport { nanoid } from \"nanoid\";\nimport \"./article-list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\nfunction ArticleList(props) {\n  _s();\n  useEffect(() => {\n    const getArticles = async e => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const response = await fetch(`api_v1/posts/${props.currCategory}`, options);\n      const data = await response.json();\n      setArticles(data);\n    };\n    getArticles();\n  }, [props.currCategory]);\n\n  // Initial load of any posts\n  const [articles, setArticles] = useState(INITIAL_ARTICLES);\n  useEffect(() => {\n    const getArticles = async e => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const response = await fetch(\"api_v1/posts/\", options);\n      const data = await response.json();\n      setArticles(data);\n    };\n    getArticles();\n  }, []);\n  const articlesHTML = articles.map(article => /*#__PURE__*/_jsxDEV(ArticleLink, {\n    article: article,\n    setNewArticle: props.setNewArticle\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"link-list\",\n    children: articlesHTML\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ArticleList, \"ze0daIV5grCZC8QJy8ogRiOPtUI=\");\n_c = ArticleList;\nexport default ArticleList;\nvar _c;\n$RefreshReg$(_c, \"ArticleList\");","map":{"version":3,"names":["useState","useEffect","ArticleLink","nanoid","jsxDEV","_jsxDEV","INITIAL_ARTICLES","ArticleList","props","_s","getArticles","e","options","method","headers","response","fetch","currCategory","data","json","setArticles","articles","articlesHTML","map","article","setNewArticle","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/jake/Documents/CCS/hw/drf-react-newspaper-app/frontend/static/src/Components/Articles/ArticleList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ArticleLink from \"./ArticleLink\";\nimport { nanoid } from \"nanoid\";\nimport \"./article-list.css\";\n\nconst INITIAL_ARTICLES = [\"article 1\", \"article 2\", \"Funny comics\", \"dsytopia\"];\n\nfunction ArticleList(props) {\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst response = await fetch(\n\t\t\t\t`api_v1/posts/${props.currCategory}`,\n\t\t\t\toptions\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tsetArticles(data);\n\t\t};\n\t\tgetArticles();\n\t}, [props.currCategory]);\n\n\t// Initial load of any posts\n\tconst [articles, setArticles] = useState(INITIAL_ARTICLES);\n\tuseEffect(() => {\n\t\tconst getArticles = async (e) => {\n\t\t\tconst options = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await fetch(\"api_v1/posts/\", options);\n\t\t\tconst data = await response.json();\n\t\t\tsetArticles(data);\n\t\t};\n\t\tgetArticles();\n\t}, []);\n\n\tconst articlesHTML = articles.map((article) => (\n\t\t<ArticleLink\n\t\t\tkey={nanoid()}\n\t\t\tarticle={article}\n\t\t\tsetNewArticle={props.setNewArticle}\n\t\t/>\n\t));\n\n\treturn <ul className=\"link-list\">{articlesHTML}</ul>;\n}\n\nexport default ArticleList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,gBAAgB,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,UAAU,CAAC;AAE/E,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3BR,SAAS,CAAC,MAAM;IACf,MAAMS,WAAW,GAAG,MAAOC,CAAC,IAAK;MAChC,MAAMC,OAAO,GAAG;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB;MACD,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gBAAeR,KAAK,CAACS,YAAa,EAAC,EACpCL,OAAO,CACP;MACD,MAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAClCC,WAAW,CAACF,IAAI,CAAC;IAClB,CAAC;IACDR,WAAW,EAAE;EACd,CAAC,EAAE,CAACF,KAAK,CAACS,YAAY,CAAC,CAAC;;EAExB;EACA,MAAM,CAACI,QAAQ,EAAED,WAAW,CAAC,GAAGpB,QAAQ,CAACM,gBAAgB,CAAC;EAC1DL,SAAS,CAAC,MAAM;IACf,MAAMS,WAAW,GAAG,MAAOC,CAAC,IAAK;MAChC,MAAMC,OAAO,GAAG;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB;MACD,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAEJ,OAAO,CAAC;MACtD,MAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAClCC,WAAW,CAACF,IAAI,CAAC;IAClB,CAAC;IACDR,WAAW,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,YAAY,GAAGD,QAAQ,CAACE,GAAG,CAAEC,OAAO,iBACzCnB,OAAA,CAACH,WAAW;IAEXsB,OAAO,EAAEA,OAAQ;IACjBC,aAAa,EAAEjB,KAAK,CAACiB;EAAc,GAF9BtB,MAAM,EAAE;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAId,CAAC;EAEF,oBAAOxB,OAAA;IAAIyB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAET;EAAY;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AACrD;AAACpB,EAAA,CA9CQF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAgDpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}